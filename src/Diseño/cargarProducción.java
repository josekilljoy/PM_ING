/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Diseño;
import Clases.Establecimiento;
import ComboBox.EstablecimientoCB;
import ComboBox.ProductorJCB;
import ComboBox.TamboCB;
import Conexion.SQLconnection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author COMPUTER
 */
public class cargarProducción extends javax.swing.JFrame {
    private ArrayList<String> listaCodEmpleados=new ArrayList<String>();    
    SQLconnection conn = new SQLconnection();
    
    ProductorJCB pr= new ProductorJCB();
    EstablecimientoCB es= new EstablecimientoCB();
    TamboCB ta= new TamboCB();
    DefaultTableModel modelo;
    /**
     * Creates new form cargarProducción
     */
    public cargarProducción() {
        initComponents();
        conn.connect();
        
        // INICIALIZACION
        super.setLocationRelativeTo(null);
        super.setTitle("Cargar Producción");
        JTF_Fecha.setText(getFechaPostgreSQL());
        
        pr.listar_los_productores(JCB_Produ);
        
        JTF_Empleado.setEditable(false);
        JTF_Etq.setEditable(false);
        JTF_Fecha.setEditable(false);
        
        // INICIALIZACION DE COMBO BOX EMPLEADOS
        ResultSet rs=conn.getEmpleadosResult();
        try {
            while (rs.next()) {
                JCB_Empleados.addItem(rs.getString(1));
                listaCodEmpleados.add(rs.getString(2)); // Guardamos los índices
            }
        } catch (SQLException ex) {
            Logger.getLogger(cargarProducción.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        resetearCampos();
    }
    
    private void resetearCampos() {
        
        JCB_Empleados.setSelectedIndex(0);
        JCB_Tam.setSelectedIndex(0);
        JCB_Produ.setSelectedIndex(0);
        JCB_Empleados.setSelectedIndex(0);
        
        JTF_Empleado.setText("");
        JTF_Etq.setText("");
        JTF_Etq.setText("");
        JTF_Fecha.setText("");
        JTF_Fecha.setText(getFechaPostgreSQL());
        
        modelo= new DefaultTableModel();
        modelo.addColumn("Animal");
        modelo.addColumn("Etiqueta");
        this.JT_Animal.setModel(modelo);
        
        // COMBO BOX INHABILITADOS
        JCB_Empleados.setEnabled(false);
        JTF_Empleado.setEnabled(false);
        JCB_Estable.setEnabled(false);
        JCB_Tam.setEnabled(false);
        
        // JTEXTFIELD INHABILITADOS
        JTF_Etq.setEnabled(false);
        JTF_Fecha.setEnabled(false);
        
        JB_Mostrar.setEnabled(false);
    }
        public void Mostrar() {
            SQLconnection conn= new SQLconnection();
            conn.connect();
            String aux=(String)this.JCB_Tam.getSelectedItem();
            ResultSet rs = conn.getAnimales(aux);
            ArrayList lista = new ArrayList ();
            int i;
            JT_Animal.setModel(modelo);
            
            try {
                while ( rs.next() ) {

                lista.add(rs.getString(1));
                lista.add(rs.getString(2));

                modelo.addRow(lista.toArray());

                }
            } catch (SQLException ex) {
                Logger.getLogger(altaEstablecimiento.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
    }

    public String getFechaPostgreSQL() {
        String dia, mes, annio;
        
        Calendar c = new GregorianCalendar();
        
        dia = Integer.toString(c.get(Calendar.DATE));
        mes = Integer.toString(c.get(Calendar.MONTH));
        annio = Integer.toString(c.get(Calendar.YEAR));
        
        return ( annio + "-" + mes + "-" + dia );
    }    
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        TítuloFrameCP = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        JTF_Etq = new javax.swing.JTextField();
        JTF_Fecha = new javax.swing.JTextField();
        JTF_Cant_L = new javax.swing.JTextField();
        JB_Guardar_Produ = new javax.swing.JButton();
        JB_Cancelar_Produ = new javax.swing.JButton();
        JCB_Produ = new javax.swing.JComboBox<>();
        JCB_Estable = new javax.swing.JComboBox<>();
        JCB_Tam = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        JSP_deTabla = new javax.swing.JScrollPane();
        JT_Animal = new javax.swing.JTable();
        JCB_Empleados = new javax.swing.JComboBox<>();
        JTF_Empleado = new javax.swing.JTextField();
        JB_Mostrar = new javax.swing.JButton();

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TítuloFrameCP.setText("Cargar producción:");

        jLabel3.setText("Plantel del tambo:");

        jLabel5.setText("Fecha:");

        jLabel6.setText("Cantidad de leche producida:");

        JTF_Etq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTF_EtqActionPerformed(evt);
            }
        });

        JB_Guardar_Produ.setText("Guardar");
        JB_Guardar_Produ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_Guardar_ProduActionPerformed(evt);
            }
        });

        JB_Cancelar_Produ.setText("Reset");
        JB_Cancelar_Produ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_Cancelar_ProduActionPerformed(evt);
            }
        });

        JCB_Produ.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código Productor" }));
        JCB_Produ.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                JCB_ProduItemStateChanged(evt);
            }
        });

        JCB_Estable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código de Establecimiento" }));
        JCB_Estable.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                JCB_EstableItemStateChanged(evt);
            }
        });

        JCB_Tam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código De Tambo" }));
        JCB_Tam.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                JCB_TamItemStateChanged(evt);
            }
        });
        JCB_Tam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCB_TamActionPerformed(evt);
            }
        });

        jLabel2.setText("Etiqueta");

        JT_Animal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        JT_Animal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JT_AnimalMouseClicked(evt);
            }
        });
        JSP_deTabla.setViewportView(JT_Animal);

        JCB_Empleados.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código Empleado" }));
        JCB_Empleados.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                JCB_EmpleadosItemStateChanged(evt);
            }
        });

        JB_Mostrar.setText("Mostrar plantel");
        JB_Mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_MostrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(JB_Mostrar)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(JSP_deTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(146, 146, 146)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel2)
                                                    .addComponent(jLabel5))
                                                .addGap(25, 25, 25))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(53, 53, 53)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel6)
                                                    .addComponent(JCB_Empleados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(JTF_Empleado)
                                                .addComponent(JTF_Etq, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(JTF_Fecha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(JTF_Cant_L, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(127, 127, 127)
                                        .addComponent(JB_Guardar_Produ, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(JB_Cancelar_Produ, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(TítuloFrameCP))
                        .addGap(0, 16, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JCB_Produ, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(JCB_Estable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JCB_Tam, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TítuloFrameCP)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JCB_Produ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JCB_Estable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JCB_Tam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(JB_Mostrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(JSP_deTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JCB_Empleados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JTF_Empleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JTF_Etq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JTF_Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JTF_Cant_L, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JB_Cancelar_Produ)
                            .addComponent(JB_Guardar_Produ))))
                .addGap(31, 31, 31))
        );

        JCB_Produ.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JTF_EtqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTF_EtqActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTF_EtqActionPerformed

    private void JCB_TamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCB_TamActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_JCB_TamActionPerformed

    private void JCB_ProduItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_JCB_ProduItemStateChanged
        // TODO add your handling code here:
        
        // SI SELECCIONA UN PRODUCTOR VALIDO
        if (JCB_Produ.getSelectedIndex()!=0) {
            // SE HABILITA EL JCB DE ESTABLECIMIENTO
            JCB_Estable.setEnabled(true);
            
            String p = (String)this.JCB_Produ.getSelectedItem();
            es.listar_los_Establecimientos(JCB_Estable, p);
        }
        
    }//GEN-LAST:event_JCB_ProduItemStateChanged

    private void JCB_EstableItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_JCB_EstableItemStateChanged
        // TODO add your handling code here:
        
        if (JCB_Estable.getSelectedIndex()!=0) {
            // HABILITA LA SELECCION DEL TAMBO
            JCB_Tam.setEnabled(true);
            
            String e = (String)this.JCB_Estable.getSelectedItem();
            ta.listar_los_Tambos(JCB_Tam, e);
        }
        
        
    }//GEN-LAST:event_JCB_EstableItemStateChanged

    private void JB_Cancelar_ProduActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_Cancelar_ProduActionPerformed
        // TODO add your handling code here:
        resetearCampos();
    }//GEN-LAST:event_JB_Cancelar_ProduActionPerformed

    private void JT_AnimalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JT_AnimalMouseClicked
        // TODO add your handling code here:
        JCB_Empleados.setEnabled(true);        
        JTF_Etq.setEnabled(true);
        
        String etiqueta="";
 
        int row = JT_Animal.rowAtPoint(evt.getPoint());
        if (row >= 0 && JT_Animal.isEnabled())
        {
            etiqueta=JT_Animal.getValueAt(row, 1).toString();            
        }
 
        JTF_Etq.setText(etiqueta);
    }//GEN-LAST:event_JT_AnimalMouseClicked

    private void JCB_EmpleadosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_JCB_EmpleadosItemStateChanged
        // TODO add your handling code here:        
        JTF_Empleado.setEnabled(true);
        JTF_Fecha.setEnabled(true);
        JTF_Fecha.setText(getFechaPostgreSQL());
        
        if (JCB_Empleados.getSelectedIndex()!=0) {
            JTF_Empleado.setText( listaCodEmpleados.get( JCB_Empleados.getSelectedIndex()-1 ) );
        }
        else {
            JTF_Empleado.setText( "" );
        }
        
    }//GEN-LAST:event_JCB_EmpleadosItemStateChanged

    private void JCB_TamItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_JCB_TamItemStateChanged
        // TODO add your handling code here:
        if (JCB_Tam.getSelectedIndex()!=0) {
            JB_Mostrar.setEnabled(true);
        }
    }//GEN-LAST:event_JCB_TamItemStateChanged

    private void JB_Guardar_ProduActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_Guardar_ProduActionPerformed
        // TODO add your handling code here:
        
        // SE OBTIENE EL CODIGO DEL TAMBO
        if (JCB_Tam.getSelectedIndex()!=0) {
            if (!JTF_Cant_L.getText().equals("")) {
                // GUARDAR LA PRODUCCION
                String codT=JCB_Tam.getSelectedItem().toString();
                String etqA=JTF_Etq.getText();
                String fec=JTF_Fecha.getText();
                String prod=JTF_Cant_L.getText();
                String idE=JTF_Empleado.getText();
                
                boolean exito=false;
                boolean existeRepetido=conn.existeProduccion(codT, etqA);
                String aviso="";
                
                if (!existeRepetido) {
                    exito=conn.insertProduccion(codT, etqA, fec, prod, idE);
                }
                else {
                    aviso+="Cod. Tambo: " + codT + "\n";
                    aviso+="Etq. Animal: " + etqA + "\n";
                    JOptionPane.showMessageDialog(null, "Ya existe un registro para ese tambo y esa vaca: \n\n" + aviso + "\n" );
                }
                
                // ALTA EXITOSA
                if (exito) {
                    String msj="Código: " + codT +  "\n";
                    msj+="Etiqueta: " + etqA +  "\n";
                    msj+="Fecha: " + fec +  "\n";
                    msj+="Cant. Leche: " + prod +  "\n";
                    msj+="Id. Empleado: " + idE +  "\n";
                    
                    JOptionPane.showMessageDialog(null, "Alta exitosa:\n\n" + msj+"\n");
                }
            }
            else {
                JOptionPane.showMessageDialog(null, "La cantidad de producción ingresada es incorrecta");
            }
        }
        
    }//GEN-LAST:event_JB_Guardar_ProduActionPerformed

    private void JB_MostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_MostrarActionPerformed
        // TODO add your handling code here:
        JB_Mostrar.setEnabled(false);
        Mostrar();
    }//GEN-LAST:event_JB_MostrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cargarProducción.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cargarProducción.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cargarProducción.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cargarProducción.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cargarProducción().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JB_Cancelar_Produ;
    private javax.swing.JButton JB_Guardar_Produ;
    private javax.swing.JButton JB_Mostrar;
    private javax.swing.JComboBox<String> JCB_Empleados;
    private javax.swing.JComboBox<String> JCB_Estable;
    private javax.swing.JComboBox<String> JCB_Produ;
    private javax.swing.JComboBox<String> JCB_Tam;
    private javax.swing.JScrollPane JSP_deTabla;
    private javax.swing.JTextField JTF_Cant_L;
    private javax.swing.JTextField JTF_Empleado;
    private javax.swing.JTextField JTF_Etq;
    private javax.swing.JTextField JTF_Fecha;
    private javax.swing.JTable JT_Animal;
    private javax.swing.JLabel TítuloFrameCP;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables

    private Object JOptionPane() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
